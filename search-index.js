var searchIndex = JSON.parse('{\
"auxtools":{"doc":"For when BYOND is not enough. Probably often.","i":[[23,"hook","auxtools","The <code>hook</code> attribute is used to define functions that may …",null,null],[23,"init","","",null,null],[23,"runtime_handler","","",null,null],[23,"shutdown","","",null,null],[0,"debug","","",null,null],[3,"StackFrame","auxtools::debug","",null,null],[12,"proc","","",0,null],[12,"offset","","",0,null],[12,"usr","","",0,null],[12,"src","","",0,null],[12,"dot","","",0,null],[12,"args","","",0,null],[12,"locals","","",0,null],[12,"file_name","","",0,null],[12,"line_number","","",0,null],[3,"CallStacks","","",null,null],[12,"active","","",1,null],[12,"suspended","","",1,null],[11,"new","","",1,[[["dmcontext",3]],["callstacks",3]]],[0,"raw_types","auxtools","",null,null],[0,"funcs","auxtools::raw_types","",null,null],[7,"call_proc_by_id_byond","auxtools::raw_types::funcs","",null,null],[7,"call_datum_proc_by_name_byond","","",null,null],[7,"get_proc_array_entry_byond","","",null,null],[7,"get_string_id_byond","","",null,null],[7,"get_variable_byond","","",null,null],[7,"set_variable_byond","","",null,null],[7,"get_string_table_entry_byond","","",null,null],[7,"inc_ref_count_byond","","",null,null],[7,"dec_ref_count_byond","","",null,null],[7,"get_list_by_id_byond","","",null,null],[7,"get_assoc_element_byond","","",null,null],[7,"set_assoc_element_byond","","",null,null],[7,"create_list_byond","","",null,null],[7,"append_to_list_byond","","",null,null],[7,"remove_from_list_byond","","",null,null],[7,"get_length_byond","","",null,null],[7,"get_misc_by_id_byond","","",null,null],[7,"to_string_byond","","",null,null],[7,"runtime_byond","","",null,null],[5,"call_proc_by_id","","",null,null],[5,"call_datum_proc_by_name","","",null,null],[5,"get_proc_array_entry","","",null,null],[5,"get_string_id","","",null,null],[5,"get_variable","","",null,null],[5,"set_variable","","",null,null],[5,"get_string_table_entry","","",null,null],[5,"inc_ref_count","","",null,null],[5,"dec_ref_count","","",null,null],[5,"get_list_by_id","","",null,null],[5,"get_assoc_element","","",null,null],[5,"set_assoc_element","","",null,null],[5,"create_list","","",null,null],[5,"append_to_list","","",null,null],[5,"remove_from_list","","",null,null],[5,"get_length","","",null,null],[5,"get_misc_by_id","","",null,null],[5,"to_string","","",null,null],[7,"CURRENT_EXECUTION_CONTEXT","","",null,null],[7,"SUSPENDED_PROCS_BUFFER","","",null,null],[7,"SUSPENDED_PROCS","","",null,null],[7,"VARIABLE_NAMES","","",null,null],[0,"lists","auxtools::raw_types","",null,null],[3,"ListId","auxtools::raw_types::lists","",null,null],[12,"0","","",2,null],[3,"AssociativeListEntry","","",null,null],[3,"List","","",null,null],[12,"vector_part","","",3,null],[12,"assoc_part","","",3,null],[12,"allocated","","",3,null],[12,"length","","",3,null],[12,"refcount","","",3,null],[0,"misc","auxtools::raw_types","",null,null],[3,"MiscId","auxtools::raw_types::misc","",null,null],[3,"BytecodeId","","",null,null],[3,"LocalsId","","",null,null],[3,"ParametersId","","",null,null],[8,"AsMiscId","","",null,null],[10,"as_misc_id","","",4,[[],["miscid",3]]],[3,"Bytecode_V1","","",null,null],[12,"count","","",5,null],[12,"bytecode","","",5,null],[3,"Bytecode_V2","","",null,null],[12,"count","","",6,null],[12,"bytecode","","",6,null],[3,"Locals_V1","","",null,null],[12,"count","","",7,null],[12,"names","","",7,null],[3,"Locals_V2","","",null,null],[12,"count","","",8,null],[12,"names","","",8,null],[3,"Parameters_V1","","",null,null],[12,"data","","",9,null],[3,"Parameters_V2","","",null,null],[12,"data","","",10,null],[19,"Misc_V1","","",null,null],[12,"bytecode","","",11,null],[12,"locals","","",11,null],[12,"parameters","","",11,null],[19,"Misc_V2","","",null,null],[12,"bytecode","","",12,null],[12,"locals","","",12,null],[12,"parameters","","",12,null],[3,"ParametersData","","",null,null],[12,"name","","",13,null],[11,"count","","",9,[[]]],[11,"count","","",10,[[]]],[5,"get_bytecode","","",null,[[["bytecodeid",3]]]],[5,"get_locals","","",null,[[["localsid",3]]]],[5,"get_parameters","","",null,[[["parametersid",3]]]],[0,"procs","auxtools::raw_types","",null,null],[3,"ProcId","auxtools::raw_types::procs","",null,null],[12,"0","","",14,null],[3,"ProcEntry","","",null,null],[12,"path","","",15,null],[12,"name","","",15,null],[12,"desc","","",15,null],[12,"category","","",15,null],[12,"bytecode","","",15,null],[12,"locals","","",15,null],[12,"parameters","","",15,null],[3,"ProcInstance","","",null,null],[12,"proc","","",16,null],[12,"flags","","",16,null],[12,"mega_hack","","",16,null],[12,"usr","","",16,null],[12,"src","","",16,null],[12,"context","","",16,null],[12,"args_count","","",16,null],[12,"args","","",16,null],[12,"time_to_resume","","",16,null],[3,"ExecutionContext","","",null,null],[12,"proc_instance","","",17,null],[12,"parent_context","","",17,null],[12,"filename","","",17,null],[12,"line","","",17,null],[12,"bytecode","","",17,null],[12,"bytecode_offset","","",17,null],[12,"dot","","",17,null],[12,"locals","","",17,null],[12,"locals_count","","",17,null],[3,"SuspendedProcsBuffer","","",null,null],[12,"buffer","","",18,null],[3,"SuspendedProcs","","",null,null],[12,"front","","",19,null],[12,"back","","",19,null],[12,"capacity","","",19,null],[0,"strings","auxtools::raw_types","",null,null],[3,"StringId","auxtools::raw_types::strings","",null,null],[12,"0","","",20,null],[11,"valid","","",20,[[]]],[3,"VariableId","","",null,null],[12,"0","","",21,null],[3,"StringEntry","","",null,null],[12,"data","","",22,null],[12,"this","","",22,null],[12,"left","","",22,null],[12,"right","","",22,null],[12,"ref_count","","",22,null],[12,"unk_1","","",22,null],[12,"unk_2","","",22,null],[0,"values","auxtools::raw_types","",null,null],[4,"ValueTag","auxtools::raw_types::values","",null,null],[13,"Null","","",23,null],[13,"Turf","","",23,null],[13,"Obj","","",23,null],[13,"Mob","","",23,null],[13,"Area","","",23,null],[13,"Client","","",23,null],[13,"String","","",23,null],[13,"MobTypepath","","",23,null],[13,"ObjTypepath","","",23,null],[13,"TurfTypepath","","",23,null],[13,"AreaTypepath","","",23,null],[13,"Resource","","",23,null],[13,"Image","","",23,null],[13,"World","","",23,null],[13,"List","","",23,null],[13,"MobVars","","",23,null],[13,"ObjVars","","",23,null],[13,"TurfVars","","",23,null],[13,"AreaVars","","",23,null],[13,"ClientVars","","",23,null],[13,"Vars","","",23,null],[13,"MobOverlays","","",23,null],[13,"MobUnderlays","","",23,null],[13,"ObjOverlays","","",23,null],[13,"ObjUnderlays","","",23,null],[13,"TurfOverlays","","",23,null],[13,"TurfUnderlays","","",23,null],[13,"AreaOverlays","","",23,null],[13,"AreaUnderlays","","",23,null],[13,"ImageVars","","",23,null],[13,"WorldVars","","",23,null],[13,"GlobalVars","","",23,null],[13,"Datum","","",23,null],[13,"SaveFile","","",23,null],[13,"Number","","",23,null],[13,"Appearance","","",23,null],[19,"ValueData","","",null,null],[12,"string","","",24,null],[12,"number","","",24,null],[12,"id","","",24,null],[12,"list","","",24,null],[3,"Value","","Internal thing used when interfacing with BYOND. You …",null,null],[12,"tag","","",25,null],[12,"data","","",25,null],[8,"IntoRawValue","","",null,null],[10,"into_raw_value","","",26,[[],["value",3]]],[0,"sigscan","auxtools","",null,null],[14,"convert_signature","auxtools::sigscan","",null,null],[3,"Scanner","","",null,null],[3,"DMContext","auxtools","Used to interact with global variables.",null,null],[3,"List","","A wrapper around Values that make working with lists a …",null,null],[3,"Proc","","Used to hook and call procs.",null,null],[12,"id","","",27,null],[12,"entry","","",27,null],[12,"path","","",27,null],[6,"ConversionResult","","Used as a result for conversions between DM values and …",null,null],[6,"DMResult","","Used as a result for hooks and calls into BYOND.",null,null],[3,"Runtime","","Represents a byond runtime, sort of. This will probably …",null,null],[12,"message","","",28,null],[3,"StringRef","","A wrapper around Values that make working with strings a …",null,null],[12,"value","","",29,null],[3,"Value","","<code>Value</code> represents any value a DM variable can hold, such …",null,null],[12,"value","","",30,null],[17,"BYONDCORE","","",null,null],[14,"byond_ffi_fn","","Creates a normal byond ffi function that can be called in …",null,null],[14,"runtime","","This macro makes instantiating Runtimes a (little bit) …",null,null],[14,"signature","","",null,null],[14,"signatures","","",null,null],[14,"byond_string","","",null,null],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","auxtools::debug","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","auxtools","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","auxtools::raw_types::lists","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","auxtools::raw_types::misc","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","auxtools::raw_types::procs","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","auxtools::raw_types::strings","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","auxtools::raw_types::values","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","auxtools","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","auxtools::sigscan","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","auxtools","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"as_misc_id","auxtools::raw_types::misc","",35,[[],["miscid",3]]],[11,"as_misc_id","","",36,[[],["miscid",3]]],[11,"as_misc_id","","",37,[[],["miscid",3]]],[11,"drop","auxtools","",30,[[]]],[11,"as_ref","","",30,[[],["value",3]]],[11,"from","","",30,[[["list",3]],["value",3]]],[11,"from","","",29,[[],["stringref",3]]],[11,"from","","",30,[[]]],[11,"from","","",30,[[]]],[11,"from","","",30,[[]]],[11,"from","","",30,[[]]],[11,"clone","","",27,[[],["proc",3]]],[11,"clone","auxtools::raw_types::lists","",2,[[],["listid",3]]],[11,"clone","auxtools::raw_types::misc","",34,[[],["miscid",3]]],[11,"clone","","",35,[[],["bytecodeid",3]]],[11,"clone","","",36,[[],["localsid",3]]],[11,"clone","","",37,[[],["parametersid",3]]],[11,"clone","","",5,[[],["bytecode_v1",3]]],[11,"clone","","",6,[[],["bytecode_v2",3]]],[11,"clone","","",7,[[],["locals_v1",3]]],[11,"clone","","",8,[[],["locals_v2",3]]],[11,"clone","","",9,[[],["parameters_v1",3]]],[11,"clone","","",10,[[],["parameters_v2",3]]],[11,"clone","","",11,[[],["misc_v1",19]]],[11,"clone","","",12,[[],["misc_v2",19]]],[11,"clone","auxtools::raw_types::procs","",14,[[],["procid",3]]],[11,"clone","auxtools::raw_types::strings","",20,[[],["stringid",3]]],[11,"clone","","",21,[[],["variableid",3]]],[11,"clone","auxtools::raw_types::values","",23,[[],["valuetag",4]]],[11,"clone","","",24,[[],["valuedata",19]]],[11,"clone","","",25,[[],["value",3]]],[11,"clone","auxtools","",29,[[]]],[11,"clone","","",30,[[],["value",3]]],[11,"eq","auxtools::raw_types::misc","",34,[[["miscid",3]]]],[11,"ne","","",34,[[["miscid",3]]]],[11,"eq","","",35,[[["bytecodeid",3]]]],[11,"ne","","",35,[[["bytecodeid",3]]]],[11,"eq","","",36,[[["localsid",3]]]],[11,"ne","","",36,[[["localsid",3]]]],[11,"eq","","",37,[[["parametersid",3]]]],[11,"ne","","",37,[[["parametersid",3]]]],[11,"eq","auxtools::raw_types::procs","",14,[[["procid",3]]]],[11,"ne","","",14,[[["procid",3]]]],[11,"eq","auxtools::raw_types::values","",23,[[["valuetag",4]]]],[11,"fmt","auxtools","",27,[[["formatter",3]],["result",6]]],[11,"fmt","auxtools::raw_types::lists","",2,[[["formatter",3]],["result",6]]],[11,"fmt","auxtools::raw_types::strings","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","auxtools::raw_types::values","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","auxtools","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","auxtools::raw_types::values","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","auxtools","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"hash","auxtools::raw_types::misc","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","auxtools::raw_types::procs","",14,[[]]],[11,"from_iter","auxtools","",32,[[["intoiterator",8]]]],[11,"get_global","","Fetch a global variable from BYOND. Will return a runtime …",31,[[["into",8],["stringref",3]],["dmresult",6]]],[11,"get_global_number","","Fetch a numeric global variable from BYOND. Will return a …",31,[[["into",8],["stringref",3]],["conversionresult",6]]],[11,"get_global_string","","Fetch a string global variable from BYOND. Will return a …",31,[[["into",8],["stringref",3]],[["conversionresult",6],["string",3]]]],[11,"get_global_list","","Fetch a list global variable from BYOND. Will return a …",31,[[["into",8],["stringref",3]],[["list",3],["conversionresult",6]]]],[11,"get_world","","Returns a Value representing the world object. It\'s the …",31,[[],["value",3]]],[11,"new","","",31,[[]]],[11,"hook","","",27,[[],[["result",4],["hookfailure",4]]]],[11,"from_value","","",32,[[["value",3]],["conversionresult",6]]],[11,"new","","Creates a new empty list.",32,[[]]],[11,"with_size","","Creates a new list filled with <code>capacity</code> nulls.",32,[[]]],[11,"get","","",32,[[["listkey",8]],["dmresult",6]]],[11,"set","","",32,[[["listkey",8],["intorawvalue",8]],[["result",4],["runtime",3]]]],[11,"append","","",32,[[["intorawvalue",8]]]],[11,"remove","","",32,[[["intorawvalue",8]]]],[11,"len","","",32,[[]]],[11,"to_vec","","Copies the List\'s vector part (values accessible by …",32,[[],[["value",3],["vec",3]]]],[11,"is_list","","",32,[[["value",3]]]],[11,"find","","Finds the first proc with the given path",27,[[["string",3],["into",8]],["option",4]]],[11,"find_override","","Finds the n\'th re-defined proc with the given path",27,[[["string",3],["into",8]],["option",4]]],[11,"from_id","","",27,[[["procid",3]],["option",4]]],[11,"parameter_names","","",27,[[],[["vec",3],["stringref",3]]]],[11,"local_names","","",27,[[],[["vec",3],["stringref",3]]]],[11,"bytecode_mut_ptr","","",27,[[]]],[11,"bytecode","","",27,[[]]],[11,"call","","Calls a global proc with the given arguments.",27,[[],["dmresult",6]]],[11,"override_id","","",27,[[]]],[11,"new","","",28,[[["string",3],["into",8]]]],[11,"for_module","auxtools::sigscan","",38,[[],[["option",4],["scanner",3]]]],[11,"find","","",38,[[],["option",4]]],[11,"new","auxtools","",29,[[]]],[11,"from_value","","",29,[[["value",3]],["option",4]]],[11,"from_id","","",29,[[["stringid",3]]]],[11,"from_variable_id","","",29,[[["variableid",3]]]],[11,"get_id","","",29,[[],["stringid",3]]],[11,"data","","",29,[[]]],[11,"new","","Creates a new value from raw tag and data. Use if you …",30,[[["valuetag",4],["valuedata",19]],["value",3]]],[11,"globals","","Equivalent to DM\'s <code>global.vars</code>.",30,[[],["value",3]]],[11,"world","","Equivalent to DM\'s <code>world</code>.",30,[[],["value",3]]],[11,"null","","Equivalent to DM\'s <code>null</code>.",30,[[],["value",3]]],[11,"turf_by_id_unchecked","","Gets a turf by ID, without bounds checking. Use …",30,[[],["value",3]]],[11,"turf_by_id","","Gets a turf by ID, with bounds checking.",30,[[],["dmresult",6]]],[11,"turf","","Gets a turf by coordinates.",30,[[],["dmresult",6]]],[11,"get","","Gets a variable by name.",30,[[["into",8],["stringref",3]],["dmresult",6]]],[11,"get_number","","Gets a variable by name and safely casts it to a float.",30,[[["into",8],["stringref",3]],["conversionresult",6]]],[11,"get_string","","Gets a variable by name and safely casts it to a string.",30,[[["into",8],["stringref",3]],[["conversionresult",6],["string",3]]]],[11,"get_list","","Gets a variable by name and safely casts it to a […",30,[[["into",8],["stringref",3]],[["list",3],["conversionresult",6]]]],[11,"set","","Sets a variable by name to a given value.",30,[[["into",8],["stringref",3],["intorawvalue",8]]]],[11,"as_number","","Check if the current value is a number and casts it.",30,[[],["conversionresult",6]]],[11,"as_string","","Check if the current value is a string and casts it.",30,[[],[["conversionresult",6],["string",3]]]],[11,"as_list","","Check if the current value is a list and casts it.",30,[[],[["list",3],["conversionresult",6]]]],[11,"call","","Calls a method of the value with the given arguments.",30,[[["asref",8]],["dmresult",6]]],[11,"to_dmstring","","",30,[[],[["stringref",3],["conversionresult",6]]]],[11,"to_string","","",30,[[],[["conversionresult",6],["string",3]]]],[11,"get_type","","Gets the type of the Value as a string",30,[[],[["result",4],["string",3],["runtime",3]]]],[11,"is_exact_type","","Checks whether this Value\'s type is equal to <code>typepath</code>.",30,[[["asref",8]]]],[11,"from_string","","Creates a Value that references a byond string. Will …",30,[[["asref",8]],["value",3]]],[11,"from_raw","","blah blah lifetime is not verified with this so use at …",30,[[["value",3]]]],[11,"from_raw_owned","","same as from_raw but does not increment the reference …",30,[[["value",3]],["value",3]]]],"p":[[3,"StackFrame"],[3,"CallStacks"],[3,"ListId"],[3,"List"],[8,"AsMiscId"],[3,"Bytecode_V1"],[3,"Bytecode_V2"],[3,"Locals_V1"],[3,"Locals_V2"],[3,"Parameters_V1"],[3,"Parameters_V2"],[19,"Misc_V1"],[19,"Misc_V2"],[3,"ParametersData"],[3,"ProcId"],[3,"ProcEntry"],[3,"ProcInstance"],[3,"ExecutionContext"],[3,"SuspendedProcsBuffer"],[3,"SuspendedProcs"],[3,"StringId"],[3,"VariableId"],[3,"StringEntry"],[4,"ValueTag"],[19,"ValueData"],[3,"Value"],[8,"IntoRawValue"],[3,"Proc"],[3,"Runtime"],[3,"StringRef"],[3,"Value"],[3,"DMContext"],[3,"List"],[3,"AssociativeListEntry"],[3,"MiscId"],[3,"BytecodeId"],[3,"LocalsId"],[3,"ParametersId"],[3,"Scanner"]]},\
"auxtools_impl":{"doc":"","i":[[14,"convert_signature","auxtools_impl","",null,null],[23,"init","","",null,null],[23,"runtime_handler","","",null,null],[23,"shutdown","","",null,null],[23,"hook","","The <code>hook</code> attribute is used to define functions that may …",null,null]],"p":[]},\
"debug_server":{"doc":"","i":[[7,"DEBUG_SERVER","debug_server","",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);